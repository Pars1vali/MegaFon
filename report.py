import datetime
import logging, re

from Tools.scripts.fixdiv import report
from aiogram import types

char_default_status = "‚ûñ"
char_complete_opio = "‚úÖ"
char_stop_opio = "‚õî"
char_attention = "‚ùó"
char_time_status = "‚åõ"

tm_user_id  = "7405295017"


opio_list = list([
    "–°—Ç–∞–≤ 189",
    "–°—Ç–∞–≤ 141",
    "–°—Ç–∞–≤/–í–µ—à",
    "–õ–µ–Ω—Ç–∞",
    "–û–∑",
    "–ù–æ–≤–æ–º–∏—Ö",
    "–ê—Ö—Ç–∞—Ä—Å–∫",
    "–¢–∏–º–∞—à–µ–≤—Å–∫",
    "–ì–∫4",
    "–ì–∫7",
    "–¢—É–∞–ø—Å–µ_–ú–∞—Ä–∫—Å–∞",
    "–¢—É–∞–ø—Å–µ_–ñ—É–∫–æ–≤–∞",
    "–ì—É–ª—å–∫–µ–≤–∏—á–∏",
    "–ö—Ä–æ–ø–æ—Ç–∫–∏–Ω 226",
    "–ö—Ä–æ–ø–æ—Ç–∫–∏–Ω 72"])


def info():
    return """
1. /start "–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞"\nüìÑ  
–°–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç –¥–ª—è –≤—Å–µ—Ö –û–ü–∏–û  
–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π üì∏ –∏ —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –û–ü–∏–û –≤ –æ–ø–∏—Å–∞–Ω–∏–∏.
‚úÖ –û—Ç—á–µ—Ç —Å–¥–∞–Ω –¥–ª—è –û–ü–∏–û!\n
2. /stop "–ù–∞–∑–≤–∞–Ω–∏–µ –û–ü–∏–û"\n‚õî 
–°—Ç–∞–≤–∏—Ç —Å—Ç–∞—Ç—É—Å "–Ω–∞ —Å—Ç–æ–ø–µ" –¥–ª—è –û–ü–∏–û.\n
3. /cancel "–ù–∞–∑–≤–∞–Ω–∏–µ –û–ü–∏–û"\n‚ûñ  
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –û–ü–∏–û.\n
4. /control
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–¥–∞—á—É –æ—Ç—á–µ—Ç–æ–≤ –≤—Å–µ–º–∏ –û–ü–∏–û –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –¢–ú
5. /help\n‚ùì  
–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º."""

def create(report_name: str):
    logging.info(f"Create report with name - {report_name}")
    date_now = datetime.datetime.now()
    report_message = f"{date_now.day:0>2}.{date_now.month:0>2} Ô∏è\n"
    report_message += f"{char_attention} {report_name} {char_attention}\n"
    report_message += '\n'.join([f'{opio} - {char_default_status}' for opio in opio_list])

    return report_message

def control(message: types.Message):
    if is_reply(message):
        report_complete = not bool(re.search(f"[{char_default_status}{char_time_status}]", message.text))
        logging.info(f"Report control. Report complete - {report_complete}")
        return report_complete

def is_reply(message: types.Message):
    if message is None:
        logging.info("Reply message is null. Need send answer for reply message.")
        return False
    return True


